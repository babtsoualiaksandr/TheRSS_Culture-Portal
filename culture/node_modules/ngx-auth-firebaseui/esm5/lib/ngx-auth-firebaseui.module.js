import { __decorate } from "tslib";
// @angular/*
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule } from '@angular/router';
import { FlexLayoutModule } from '@angular/flex-layout';
// @angular/fire
import { FirebaseNameOrConfigToken, FirebaseOptionsToken } from '@angular/fire';
import { AngularFireAuthModule } from '@angular/fire/auth';
import { AngularFirestoreModule } from '@angular/fire/firestore';
// @angular/material
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatDialogModule } from '@angular/material/dialog';
import { MatDividerModule } from '@angular/material/divider';
import { MatIconModule, MatIconRegistry } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatMenuModule } from '@angular/material/menu';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatTabsModule } from '@angular/material/tabs';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';
import { NgxAuthFirebaseuiLoginComponent } from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';
import { NgxAuthFirebaseuiRegisterComponent } from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';
import { DomSanitizer } from '@angular/platform-browser';
// ngx-auth-firebaseui
// components
import { AuthComponent } from './components/ngx-auth-firebaseui/auth.component';
import { UserComponent } from './components/ngx-auth-firebaseui-user/user.component';
import { AuthProvidersComponent } from './components/providers/auth.providers.component';
import { EmailConfirmationComponent } from './components/email-confirmation/email-confirmation.component';
import { ngxAuthFirebaseUIConfigFactory } from './interfaces/config.interface';
import { NgxAuthFirebaseuiAvatarComponent } from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';
import { LegalityDialogComponent } from './components/legality-dialog/legality-dialog.component';
// guards
import { LoggedInGuard } from './guards/logged-in.guard';
// services
import { FirestoreSyncService } from './services/firestore-sync.service';
import { AuthProcessService } from './services/auth-process.service';
import { NgxAuthFirebaseUIConfigToken, UserProvidedConfigToken } from './tokens';
// interfaces
// ###################################################################################################
// Export module's public API
// components
export { LegalityDialogComponent } from './components/legality-dialog/legality-dialog.component';
export { NgxAuthFirebaseuiAvatarComponent } from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';
export { UserComponent } from './components/ngx-auth-firebaseui-user/user.component';
export { AuthComponent } from './components/ngx-auth-firebaseui/auth.component';
export { AuthProvidersComponent, Layout, Theme } from './components/providers/auth.providers.component';
export { NgxAuthFirebaseuiLoginComponent } from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';
export { NgxAuthFirebaseuiRegisterComponent } from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';
// guards
export { LoggedInGuard } from './guards/logged-in.guard';
// services
export { AuthProcessService, AuthProvider } from './services/auth-process.service';
export { FirestoreSyncService } from './services/firestore-sync.service';
var NgxAuthFirebaseUIModule = /** @class */ (function () {
    function NgxAuthFirebaseUIModule(iconRegistry, sanitizer, auth) {
        this.iconRegistry = iconRegistry;
        this.sanitizer = sanitizer;
        auth.listenToUserEvents();
        this.registerProviderIcons();
    }
    NgxAuthFirebaseUIModule_1 = NgxAuthFirebaseUIModule;
    NgxAuthFirebaseUIModule.forRoot = function (configFactory, appNameFactory, config) {
        if (appNameFactory === void 0) { appNameFactory = function () { return undefined; }; }
        if (config === void 0) { config = {}; }
        return {
            ngModule: NgxAuthFirebaseUIModule_1,
            providers: [
                {
                    provide: FirebaseOptionsToken,
                    useValue: configFactory
                },
                {
                    provide: FirebaseNameOrConfigToken,
                    useFactory: appNameFactory
                },
                { provide: UserProvidedConfigToken, useValue: config },
                {
                    provide: NgxAuthFirebaseUIConfigToken,
                    useFactory: ngxAuthFirebaseUIConfigFactory,
                    deps: [UserProvidedConfigToken]
                },
                AuthProcessService,
                FirestoreSyncService,
                LoggedInGuard
            ]
        };
    };
    NgxAuthFirebaseUIModule.prototype.registerProviderIcons = function () {
        this.iconRegistry
            .addSvgIcon('google', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/google.svg'))
            .addSvgIcon('apple', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/apple.svg'))
            .addSvgIcon('google-colored', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/google.svg'))
            .addSvgIcon('facebook', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/facebook.svg'))
            .addSvgIcon('twitter', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/twitter.svg'))
            .addSvgIcon('github', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/github-circle.svg'))
            .addSvgIcon('microsoft', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/microsoft.svg'))
            .addSvgIcon('yahoo', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/yahoo.svg'))
            .addSvgIcon('phone', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/phone.svg'));
    };
    var NgxAuthFirebaseUIModule_1;
    NgxAuthFirebaseUIModule.ctorParameters = function () { return [
        { type: MatIconRegistry },
        { type: DomSanitizer },
        { type: AuthProcessService }
    ]; };
    NgxAuthFirebaseUIModule = NgxAuthFirebaseUIModule_1 = __decorate([
        NgModule({
            imports: [
                CommonModule,
                // HTTP
                RouterModule,
                HttpClientModule,
                // FLEX_LAYOUT
                FlexLayoutModule,
                // FORMS
                FormsModule,
                ReactiveFormsModule,
                // MATERIAL2
                MatTabsModule,
                MatCardModule,
                MatInputModule,
                MatButtonModule,
                MatIconModule,
                MatSnackBarModule,
                MatDividerModule,
                MatChipsModule,
                MatTooltipModule,
                MatDialogModule,
                MatCheckboxModule,
                MatProgressSpinnerModule,
                MatProgressBarModule,
                MatDialogModule,
                MatMenuModule,
                // ANGULAR MATERIAL EXTENSIONS
                MatPasswordStrengthModule,
                // ANGULARFIRE2
                AngularFireAuthModule,
                AngularFirestoreModule,
            ],
            exports: [
                AuthComponent,
                UserComponent,
                NgxAuthFirebaseuiAvatarComponent,
                AuthProvidersComponent,
                EmailConfirmationComponent,
                // LoggedInGuard,
                AngularFireAuthModule,
                AngularFirestoreModule,
                NgxAuthFirebaseuiLoginComponent,
                NgxAuthFirebaseuiRegisterComponent
            ],
            declarations: [
                AuthComponent,
                UserComponent,
                NgxAuthFirebaseuiAvatarComponent,
                AuthProvidersComponent,
                EmailConfirmationComponent,
                LegalityDialogComponent,
                NgxAuthFirebaseuiLoginComponent,
                NgxAuthFirebaseuiRegisterComponent
            ],
            entryComponents: [
                UserComponent,
                LegalityDialogComponent
            ]
        })
    ], NgxAuthFirebaseUIModule);
    return NgxAuthFirebaseUIModule;
}());
export { NgxAuthFirebaseUIModule };
//# sourceMappingURL=data:application/json;base64,