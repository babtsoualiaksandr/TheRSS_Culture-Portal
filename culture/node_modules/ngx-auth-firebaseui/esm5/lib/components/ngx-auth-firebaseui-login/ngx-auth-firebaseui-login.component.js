import { __awaiter, __decorate, __generator, __param } from "tslib";
import { Component, EventEmitter, Inject, Input, Output, PLATFORM_ID, ViewEncapsulation } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { AuthProcessService, AuthProvider } from '../../services';
import { NgxAuthFirebaseuiAnimations } from '../../animations';
import { isPlatformBrowser } from '@angular/common';
var NgxAuthFirebaseuiLoginComponent = /** @class */ (function () {
    function NgxAuthFirebaseuiLoginComponent(platformId, authProcess, formBuilder) {
        this.platformId = platformId;
        this.authProcess = authProcess;
        this.formBuilder = formBuilder;
        this.providers = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string
        this.registrationEnabled = true;
        this.resetPasswordEnabled = true;
        // i18n
        this.titleText = 'LOGIN TO YOUR ACCOUNT';
        this.rememberMeText = 'Remember Me';
        this.loginButtonText = 'LOGIN';
        this.orLabelText = 'OR';
        this.forgotPasswordText = 'Forgot Password?';
        this.dontHaveAnAccountText = 'Don\'t have an account?';
        this.createAccountButtonText = 'Create an account';
        // i18n email
        this.emailText = 'Email';
        this.emailErrorRequiredText = 'Email is required';
        this.emailErrorPatternText = 'Please enter a valid email address';
        // i18n password
        this.passwordText = 'Password';
        this.passwordErrorRequiredText = 'Password is required';
        // tslint:disable-next-line:no-output-on-prefix
        this.onCreateAccountRequested = new EventEmitter();
        // tslint:disable-next-line:no-output-on-prefix
        this.onResetPasswordRequested = new EventEmitter();
        this.authProviders = AuthProvider;
        this.authenticationError = false;
        this.onSuccess = authProcess.onSuccessEmitter;
        this.onError = authProcess.onErrorEmitter;
    }
    Object.defineProperty(NgxAuthFirebaseuiLoginComponent.prototype, "color", {
        get: function () {
            return this.authenticationError ? 'warn' : 'primary';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxAuthFirebaseuiLoginComponent.prototype, "colorAccent", {
        get: function () {
            return this.authenticationError ? 'warn' : 'accent';
        },
        enumerable: true,
        configurable: true
    });
    NgxAuthFirebaseuiLoginComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (isPlatformBrowser(this.platformId)) {
            this.onErrorSubscription = this.onError.subscribe(function () { return _this.authenticationError = true; });
        }
        this.updateAuthSnackbarMessages();
        this.loginForm = this.formBuilder.group({
            email: ['', [Validators.required, Validators.email]],
            password: ['', Validators.required]
        });
    };
    NgxAuthFirebaseuiLoginComponent.prototype.updateAuthSnackbarMessages = function () {
        this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;
        this.authProcess.messageOnAuthError = this.messageOnAuthError;
    };
    NgxAuthFirebaseuiLoginComponent.prototype.login = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.authProcess.signInWith(this.authProviders.EmailAndPassword, {
                            email: this.loginForm.controls.email.value,
                            password: this.loginForm.controls.password.value
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    NgxAuthFirebaseuiLoginComponent.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: AuthProcessService },
        { type: FormBuilder }
    ]; };
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "logoUrl", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "providers", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "appearance", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "registrationEnabled", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "resetPasswordEnabled", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "messageOnAuthSuccess", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "messageOnAuthError", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "titleText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "rememberMeText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "loginButtonText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "orLabelText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "forgotPasswordText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "dontHaveAnAccountText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "createAccountButtonText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "emailText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "emailErrorRequiredText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "emailErrorPatternText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "passwordText", void 0);
    __decorate([
        Input()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "passwordErrorRequiredText", void 0);
    __decorate([
        Output()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "onSuccess", void 0);
    __decorate([
        Output()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "onError", void 0);
    __decorate([
        Output()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "onCreateAccountRequested", void 0);
    __decorate([
        Output()
    ], NgxAuthFirebaseuiLoginComponent.prototype, "onResetPasswordRequested", void 0);
    NgxAuthFirebaseuiLoginComponent = __decorate([
        Component({
            selector: 'ngx-auth-firebaseui-login',
            template: "<div fxLayout=\"column\" id=\"login\">\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" id=\"login-form-wrapper\">\n\n    <div [@animateStagger]=\"{ value: '50' }\" id=\"login-form\">\n\n      <div *ngIf=\"logoUrl\" class=\"logo\">\n        <img [@animate]=\"{ value: '*', params: { x: '50px' } }\" [src]=\"logoUrl\" alt=\"logo\">\n      </div>\n\n      <div [@animate]=\"{ value: '*', params: { x: '-50px' } }\" class=\"title\">{{titleText}}</div>\n\n      <form [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [formGroup]=\"loginForm\" name=\"loginForm\"\n            novalidate>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"emailText\" formControlName=\"email\" matInput>\n          <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\">\n            {{emailErrorRequiredText}}\n          </mat-error>\n          <mat-error\n            *ngIf=\"!loginForm.get('email')?.hasError('required') &&\n                                loginForm.get('email')?.hasError('email')\">\n            {{emailErrorPatternText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordText\" formControlName=\"password\" matInput type=\"password\">\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error>\n            {{passwordErrorRequiredText}}\n          </mat-error>\n        </mat-form-field>\n\n        <div [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n             class=\"remember-forgot-password\" fxLayout=\"row\"\n             fxLayout.xs=\"column\"\n             fxLayoutAlign=\"space-between center\">\n          <!--          <mat-checkbox class=\"remember-me\" aria-label=\"Remember Me\">-->\n          <!--            {{rememberMeText}}-->\n          <!--          </mat-checkbox>-->\n\n          <button (click)=\"onResetPasswordRequested.emit()\"\n                  *ngIf=\"resetPasswordEnabled\"\n                  [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                  [color]=\"color\"\n                  class=\"forgot-password\"\n                  mat-button\n                  type=\"button\">\n            {{forgotPasswordText}}\n          </button>\n        </div>\n\n        <button (click)=\"login()\"\n                [color]=\"colorAccent\"\n                [disabled]=\"loginForm.invalid\"\n                aria-label=\"LOG IN\"\n                class=\"submit-button\"\n                id=\"loginButton\"\n                mat-raised-button>\n          {{loginButtonText}}\n        </button>\n\n      </form>\n\n      <div *ngIf=\"providers.length > 0\"\n           [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n           class=\"separator\">\n        <span class=\"text\">{{orLabelText}}</span>\n      </div>\n\n      <ngx-auth-firebaseui-providers [providers]=\"providers\"\n                                     fxLayoutAlign=\"center center\"\n                                     layout=\"column\"\n                                     theme=\"raised\"></ngx-auth-firebaseui-providers>\n\n      <div *ngIf=\"registrationEnabled\"\n           [@animateStagger]=\"{ value: '100' }\"\n           class=\"register\"\n           fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <span [@animate]=\"{ value: '*', params: { x: '100px' } }\" class=\"text\">\n          {{dontHaveAnAccountText}}\n        </span>\n        <button (click)=\"onCreateAccountRequested.emit()\"\n                [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                [color]=\"color\"\n                id=\"createAccountButton\"\n                mat-button\n                type=\"button\">{{createAccountButtonText}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None,
            animations: NgxAuthFirebaseuiAnimations,
            styles: ["ngx-auth-firebaseui-login #login-form-wrapper{-webkit-box-flex:1;flex:1 0 auto;padding:32px}ngx-auth-firebaseui-login #login-form-wrapper #login-form{width:384px;max-width:384px;padding:32px;text-align:center}ngx-auth-firebaseui-login #login-form-wrapper #login-form .logo{width:150px;height:150px;margin:32px auto}ngx-auth-firebaseui-login #login-form-wrapper #login-form .title{font-size:20px;margin:16px 0 32px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form{width:100%;text-align:left}ngx-auth-firebaseui-login #login-form-wrapper #login-form form mat-form-field{width:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form form mat-checkbox{margin:0}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password{font-size:13px;margin-top:8px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password .remember-me{margin-bottom:16px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password .forgot-password{font-size:13px;font-weight:500;margin-bottom:16px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .submit-button{width:220px;margin:16px auto;display:block}@media screen and (max-width:599px){ngx-auth-firebaseui-login #login-form-wrapper{padding:16px}ngx-auth-firebaseui-login #login-form-wrapper #login-form{padding:24px;width:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .submit-button{width:90%}ngx-auth-firebaseui-login #login-form-wrapper #login-form button{width:80%}}ngx-auth-firebaseui-login #login-form-wrapper #login-form .register{margin:32px auto 24px;font-weight:500}ngx-auth-firebaseui-login #login-form-wrapper #login-form .register .text{margin-right:8px}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator{font-size:15px;font-weight:600;margin:24px auto;position:relative;overflow:hidden;width:100px}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text{display:-webkit-inline-box;display:inline-flex;position:relative;padding:0 8px;z-index:9999}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:after,ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:before{content:\"\";display:block;width:30px;position:absolute;top:10px;border-top:1px solid}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:before{right:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:after{left:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form button.facebook-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.github-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.google-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.microsoft-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.twitter-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.yahoo-raised{width:192px;text-transform:none;color:#fff;font-size:13px;margin-bottom:8px}"]
        }),
        __param(0, Inject(PLATFORM_ID))
    ], NgxAuthFirebaseuiLoginComponent);
    return NgxAuthFirebaseuiLoginComponent;
}());
export { NgxAuthFirebaseuiLoginComponent };
//# sourceMappingURL=data:application/json;base64,